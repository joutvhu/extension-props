const {FunctionType} = require('#index');
const dataTest = require('./data/function');

test('forInstance function', () => {
    expect(FunctionType.forInstance({})).toBeFalsy();
    expect(FunctionType.forInstance(function() {})).toBeTruthy();
    expect(FunctionType.forInstance(function a() {})).toBeTruthy();
});

test('defineFunction function', () => {
    expect(FunctionType.defineFunction('A')).toBeInstanceOf(Function);
    expect(FunctionType.defineFunction('B', function() {})).toHaveProperty('name', 'B');
    expect(FunctionType.defineFunction('C', function a() {})).toHaveProperty('name', 'C');
    expect(FunctionType.defineFunction('D', function b() {})).toBeInstanceOf(Function);
});

test('clone function', () => {
    expect(FunctionType.valueOf(null)).toBeUndefined();
    expect(FunctionType.valueOf(function() {}).clone()).toBeInstanceOf(Function);
    expect(FunctionType.valueOf(function a() {}).clone()).toBeInstanceOf(Function);
    expect(FunctionType.valueOf(function b() {}).clone()).toBeInstanceOf(Function);
});

test('valueOf.defineFunction function', () => {
    expect(FunctionType.valueOf(function() {}).defineFunction('A')).toHaveProperty('name', 'A');
    expect(FunctionType.valueOf(function a() {}).defineFunction('B')).toHaveProperty('name', 'B');
    expect(FunctionType.valueOf(function b() {}).defineFunction('C')).toBeInstanceOf(Function);
});

test('valueOf.defineClass function', () => {
    expect(FunctionType.valueOf(function() {}).defineClass('A')).toHaveProperty('name', 'A');
    expect(FunctionType.valueOf(function a() {}).defineClass('B', class A {})).toHaveProperty('name', 'B');
    expect(FunctionType.valueOf(function b() {}).defineClass('C')).toBeInstanceOf(Function);
});

test('isNormalFunction function', () => {
    expect(FunctionType.isNormalFunction(dataTest.as0 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.as1 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.as2 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.as3 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.as4 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.as5 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.as6 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.as7 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.as8 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.as9 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.as10)).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.as11)).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.as12)).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.as13)).toBeFalsy();

    expect(FunctionType.isNormalFunction(dataTest.sy0 )).toBeTruthy();
    expect(FunctionType.isNormalFunction(dataTest.sy1 )).toBeTruthy();
    expect(FunctionType.isNormalFunction(dataTest.sy2 )).toBeTruthy();
    expect(FunctionType.isNormalFunction(dataTest.sy3 )).toBeTruthy();
    expect(FunctionType.isNormalFunction(dataTest.sy4 )).toBeTruthy();
    expect(FunctionType.isNormalFunction(dataTest.sy5 )).toBeTruthy();
    expect(FunctionType.isNormalFunction(dataTest.sy6 )).toBeTruthy();
    expect(FunctionType.isNormalFunction(dataTest.sy7 )).toBeTruthy();
    expect(FunctionType.isNormalFunction(dataTest.sy8 )).toBeTruthy();
    expect(FunctionType.isNormalFunction(dataTest.sy9 )).toBeTruthy();
    expect(FunctionType.isNormalFunction(dataTest.sy10)).toBeTruthy();
    expect(FunctionType.isNormalFunction(dataTest.sy11)).toBeTruthy();
    expect(FunctionType.isNormalFunction(dataTest.sy12)).toBeTruthy();
    expect(FunctionType.isNormalFunction(dataTest.sy13)).toBeTruthy();

    expect(FunctionType.isNormalFunction(dataTest.ar0 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ar1 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ar2 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ar3 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ar4 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ar5 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ar6 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ar7 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ar8 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ar9 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ar10)).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ar11)).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ar12)).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ar13)).toBeFalsy();

    expect(FunctionType.isNormalFunction(dataTest.sr0 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.sr1 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.sr2 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.sr3 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.sr4 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.sr5 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.sr6 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.sr7 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.sr8 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.sr9 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.sr10)).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.sr11)).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.sr12)).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.sr13)).toBeFalsy();

    expect(FunctionType.isNormalFunction(dataTest.ca0 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ca1 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ca2 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ca3 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ca4 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ca5 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ca6 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ca7 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ca8 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ca9 )).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ca10)).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ca11)).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ca12)).toBeFalsy();
    expect(FunctionType.isNormalFunction(dataTest.ca13)).toBeFalsy();

    expect(FunctionType.isSyncFunction(dataTest.sc0 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc1 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc2 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc3 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc4 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc5 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc6 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc7 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc8 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc9 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc10)).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc11)).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc12)).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc13)).toBeFalsy();
});

test('isAsyncFunction function', () => {
    expect(FunctionType.isAsyncFunction(dataTest.as0 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.as1 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.as2 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.as3 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.as4 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.as5 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.as6 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.as7 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.as8 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.as9 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.as10)).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.as11)).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.as12)).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.as13)).toBeTruthy();

    expect(FunctionType.isAsyncFunction(dataTest.sy0 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sy1 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sy2 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sy3 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sy4 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sy5 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sy6 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sy7 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sy8 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sy9 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sy10)).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sy11)).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sy12)).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sy13)).toBeFalsy();

    expect(FunctionType.isAsyncFunction(dataTest.ar0 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.ar1 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.ar2 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.ar3 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.ar4 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.ar5 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.ar6 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.ar7 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.ar8 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.ar9 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.ar10)).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.ar11)).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.ar12)).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.ar13)).toBeTruthy();

    expect(FunctionType.isAsyncFunction(dataTest.sr0 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sr1 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sr2 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sr3 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sr4 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sr5 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sr6 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sr7 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sr8 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sr9 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sr10)).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sr11)).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sr12)).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.sr13)).toBeFalsy();

    expect(FunctionType.isAsyncFunction(dataTest.ca0 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.ca1 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.ca2 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.ca3 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.ca4 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.ca5 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.ca6 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.ca7 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.ca8 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.ca9 )).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.ca10)).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.ca11)).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.ca12)).toBeFalsy();
    expect(FunctionType.isAsyncFunction(dataTest.ca13)).toBeFalsy();

    expect(FunctionType.isAsyncFunction(dataTest.sc0 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.sc1 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.sc2 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.sc3 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.sc4 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.sc5 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.sc6 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.sc7 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.sc8 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.sc9 )).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.sc10)).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.sc11)).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.sc12)).toBeTruthy();
    expect(FunctionType.isAsyncFunction(dataTest.sc13)).toBeTruthy();
});

test('isSyncFunction function', () => {
    expect(FunctionType.isSyncFunction(dataTest.as0 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.as1 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.as2 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.as3 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.as4 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.as5 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.as6 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.as7 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.as8 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.as9 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.as10)).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.as11)).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.as12)).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.as13)).toBeFalsy();

    expect(FunctionType.isSyncFunction(dataTest.sy0 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sy1 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sy2 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sy3 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sy4 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sy5 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sy6 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sy7 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sy8 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sy9 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sy10)).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sy11)).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sy12)).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sy13)).toBeTruthy();

    expect(FunctionType.isSyncFunction(dataTest.ar0 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.ar1 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.ar2 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.ar3 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.ar4 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.ar5 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.ar6 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.ar7 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.ar8 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.ar9 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.ar10)).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.ar11)).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.ar12)).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.ar13)).toBeFalsy();

    expect(FunctionType.isSyncFunction(dataTest.sr0 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sr1 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sr2 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sr3 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sr4 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sr5 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sr6 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sr7 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sr8 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sr9 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sr10)).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sr11)).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sr12)).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.sr13)).toBeTruthy();

    expect(FunctionType.isSyncFunction(dataTest.ca0 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.ca1 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.ca2 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.ca3 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.ca4 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.ca5 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.ca6 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.ca7 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.ca8 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.ca9 )).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.ca10)).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.ca11)).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.ca12)).toBeTruthy();
    expect(FunctionType.isSyncFunction(dataTest.ca13)).toBeTruthy();

    expect(FunctionType.isSyncFunction(dataTest.sc0 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc1 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc2 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc3 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc4 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc5 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc6 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc7 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc8 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc9 )).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc10)).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc11)).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc12)).toBeFalsy();
    expect(FunctionType.isSyncFunction(dataTest.sc13)).toBeFalsy();
});

test('isArrowFunction function', () => {
    expect(FunctionType.isArrowFunction(dataTest.as0 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.as1 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.as2 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.as3 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.as4 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.as5 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.as6 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.as7 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.as8 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.as9 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.as10)).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.as11)).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.as12)).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.as13)).toBeFalsy();

    expect(FunctionType.isArrowFunction(dataTest.sy0 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sy1 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sy2 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sy3 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sy4 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sy5 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sy6 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sy7 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sy8 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sy9 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sy10)).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sy11)).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sy12)).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sy13)).toBeFalsy();

    expect(FunctionType.isArrowFunction(dataTest.ar0 )).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.ar1 )).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.ar2 )).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.ar3 )).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.ar4 )).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.ar5 )).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.ar6 )).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.ar7 )).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.ar8 )).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.ar9 )).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.ar10)).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.ar11)).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.ar12)).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.ar13)).toBeTruthy();

    expect(FunctionType.isArrowFunction(dataTest.sr0 )).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.sr1 )).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.sr2 )).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.sr3 )).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.sr4 )).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.sr5 )).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.sr6 )).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.sr7 )).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.sr8 )).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.sr9 )).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.sr10)).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.sr11)).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.sr12)).toBeTruthy();
    expect(FunctionType.isArrowFunction(dataTest.sr13)).toBeTruthy();

    expect(FunctionType.isArrowFunction(dataTest.ca0 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.ca1 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.ca2 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.ca3 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.ca4 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.ca5 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.ca6 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.ca7 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.ca8 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.ca9 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.ca10)).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.ca11)).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.ca12)).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.ca13)).toBeFalsy();

    expect(FunctionType.isArrowFunction(dataTest.sc0 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sc1 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sc2 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sc3 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sc4 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sc5 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sc6 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sc7 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sc8 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sc9 )).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sc10)).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sc11)).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sc12)).toBeFalsy();
    expect(FunctionType.isArrowFunction(dataTest.sc13)).toBeFalsy();
});

test('isNonArrowFunction function', () => {
    expect(FunctionType.isNonArrowFunction(dataTest.as0 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.as1 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.as2 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.as3 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.as4 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.as5 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.as6 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.as7 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.as8 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.as9 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.as10)).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.as11)).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.as12)).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.as13)).toBeTruthy();

    expect(FunctionType.isNonArrowFunction(dataTest.sy0 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sy1 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sy2 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sy3 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sy4 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sy5 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sy6 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sy7 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sy8 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sy9 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sy10)).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sy11)).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sy12)).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sy13)).toBeTruthy();

    expect(FunctionType.isNonArrowFunction(dataTest.ar0 )).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.ar1 )).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.ar2 )).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.ar3 )).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.ar4 )).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.ar5 )).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.ar6 )).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.ar7 )).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.ar8 )).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.ar9 )).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.ar10)).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.ar11)).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.ar12)).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.ar13)).toBeFalsy();

    expect(FunctionType.isNonArrowFunction(dataTest.sr0 )).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.sr1 )).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.sr2 )).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.sr3 )).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.sr4 )).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.sr5 )).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.sr6 )).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.sr7 )).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.sr8 )).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.sr9 )).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.sr10)).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.sr11)).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.sr12)).toBeFalsy();
    expect(FunctionType.isNonArrowFunction(dataTest.sr13)).toBeFalsy();

    expect(FunctionType.isNonArrowFunction(dataTest.ca0 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.ca1 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.ca2 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.ca3 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.ca4 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.ca5 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.ca6 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.ca7 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.ca8 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.ca9 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.ca10)).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.ca11)).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.ca12)).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.ca13)).toBeTruthy();

    expect(FunctionType.isNonArrowFunction(dataTest.sc0 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sc1 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sc2 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sc3 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sc4 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sc5 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sc6 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sc7 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sc8 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sc9 )).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sc10)).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sc11)).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sc12)).toBeTruthy();
    expect(FunctionType.isNonArrowFunction(dataTest.sc13)).toBeTruthy();
});
